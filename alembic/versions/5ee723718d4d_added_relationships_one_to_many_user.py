"""added relationships one to many user

Revision ID: 5ee723718d4d
Revises: b024dbac7d88
Create Date: 2023-07-02 00:55:52.361620

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5ee723718d4d'
down_revision = 'b024dbac7d88'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_role',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.alter_column('refresh_token', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    # op.create_unique_constraint(None, 'refresh_token', ['user_id'])
    op.create_unique_constraint(None, 'refresh_token', ['id'])
    op.alter_column('role', 'access',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_unique_constraint(None, 'role', ['id'])
    op.drop_constraint('user_role_id_key', 'user', type_='unique')
    op.create_unique_constraint(None, 'user', ['id'])
    op.drop_column('user', 'role_id')
    op.drop_column('user', 'history')
    op.alter_column('user_history', 'event',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_unique_constraint(None, 'user_history', ['id'])
    op.create_foreign_key(None, 'user_history', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_history', type_='foreignkey')
    op.drop_constraint(None, 'user_history', type_='unique')
    op.alter_column('user_history', 'event',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.add_column('user', sa.Column('history', sa.VARCHAR(length=1000), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user', type_='unique')
    op.create_unique_constraint('user_role_id_key', 'user', ['role_id'])
    op.drop_constraint(None, 'role', type_='unique')
    op.alter_column('role', 'access',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'refresh_token', type_='unique')
    op.drop_constraint(None, 'refresh_token', type_='unique')
    op.alter_column('refresh_token', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_table('user_role')
    # ### end Alembic commands ###
