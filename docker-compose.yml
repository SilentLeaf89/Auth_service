version: '3'
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    environment:
      - NGINX_PORT=80
      - SERVER_NAME="_"
      - GUNICORN_SOCK=/app-socket/async.sock
      - PROXY_PORT=8000
    depends_on:
      fastapi:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - socket:/app-socket/
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:80/api/openapi"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    image: authapi:${AUTH_API_VERSION}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - REDIS_HOST=${REDIS_HOST}
    entrypoint: ./entrypoint-prod.sh
    volumes:
      - socket:/app-socket/
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; sock = socket.socket(socket.AF_UNIX); sock.connect('/app-socket/async.sock')"
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/5432'
      interval: 5s
      timeout: 5s
      retries: 12


  redis:  
    image: redis:${REDIS_VERSION}
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  socket:
  postgres:
  redis-data:
